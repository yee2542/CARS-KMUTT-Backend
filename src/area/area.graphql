scalar JSON

type Reserve {
  interval: Int
  max: Int
  start: String
  stop: String
}

type AreaBuilding {
  _id: ID
  name: String
  type: String
  category: String
  createAt: String
  updateAt: String
}

input CreateAreaBuildingInput {
  name: String
  type: String
  category: String
}

type Required {
  form: Form
  staff: [User]
  requestor: Int
}

type Area {
  _id: ID
  name: String
  building: AreaBuilding
  required: Required
  reserve: [Reserve]
  createAt: String
  updateAt: String
}

input ReserveInput {
  interval: Int
  max: Int
  start: String
  stop: String
}

input RequiredInput {
  form: String
  staff: [String]
  requestor: Int
}

input CreateAreaInput {
  name: String
  building: String
  required: RequiredInput
  reserve: [ReserveInput]
  createAt: String
  updateAt: String
}

type Query {
  Areas: [Area]
  AreaBuildings: [AreaBuilding]
}

type Mutation {
  createArea(createArea: CreateAreaInput): Area
  createAreaBuilding(createAreaBuilding: CreateAreaBuildingInput): AreaBuilding
}

# external
#Form
type Option {
  key: String
  label: String
  value: String
}

type Field {
  key: String
  label: String
  value: [String]
  type: String
  options: [Option]
}

type Form {
  _id: String
  name: String
  fields: [Field]
  createAt: String
  updateAt: String
}

# User
type User {
  username: String
  password: String
  email: String
  permission: String
}
